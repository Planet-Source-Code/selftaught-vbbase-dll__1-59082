////////////////////////////////////////////////////////////
// Name : COMEnums.odl
// Author : Paul R. Wilde
// Created : 23rd April 1999
/////////////////////////////////////////////////////////////
// Copyright © Paul R. Wilde 1999. All Rights Reserved.
/////////////////////////////////////////////////////////////
// Bug reports, suggestions & comments should be emailed to :
// prw.exponential@dial.pipex.com
/////////////////////////////////////////////////////////////

/////////////////////////////////////////////////////////////
// Revision history
/////////////////////////////////////////////////////////////
// 23/04/99
// Initial development
/////////////////////////////////////////////////////////////

typedef enum tagOLEGETMONIKER
{
	OLEGETMONIKER_ONLYIFTHERE = 1,
      OLEGETMONIKER_FORCEASSIGN = 2,
      OLEGETMONIKER_UNASSIGN    = 3,
      OLEGETMONIKER_TEMPFORUSER = 4
} OLEGETMONIKER;

typedef enum tagOLEWHICHMK
{
	OLEWHICHMK_CONTAINER = 1,
      OLEWHICHMK_OBJREL    = 2,
      OLEWHICHMK_OBJFULL   = 3
} OLEWHICHMK;

typedef enum tagUSERCLASSTYPE
{
	USERCLASSTYPE_FULL    = 1,
      USERCLASSTYPE_SHORT   = 2,
      USERCLASSTYPE_APPNAME = 3,
} USERCLASSTYPE;

typedef enum tagOLEMISC
{
	OLEMISC_RECOMPOSEONRESIZE           = 0x00000001,
      OLEMISC_ONLYICONIC                  = 0x00000002,
      OLEMISC_INSERTNOTREPLACE            = 0x00000004,
      OLEMISC_STATIC                      = 0x00000008,
      OLEMISC_CANTLINKINSIDE              = 0x00000010,
      OLEMISC_CANLINKBYOLE1               = 0x00000020,
      OLEMISC_ISLINKOBJECT                = 0x00000040,
      OLEMISC_INSIDEOUT                   = 0x00000080,
      OLEMISC_ACTIVATEWHENVISIBLE         = 0x00000100,
      OLEMISC_RENDERINGISDEVICEINDEPENDENT= 0x00000200,
      OLEMISC_INVISIBLEATRUNTIME          = 0x00000400,
      OLEMISC_ALWAYSRUN                   = 0x00000800,
      OLEMISC_ACTSLIKEBUTTON              = 0x00001000,
      OLEMISC_ACTSLIKELABEL               = 0x00002000,
      OLEMISC_NOUIACTIVATE                = 0x00004000,
      OLEMISC_ALIGNABLE                   = 0x00008000,
      OLEMISC_SIMPLEFRAME                 = 0x00010000,
      OLEMISC_SETCLIENTSITEFIRST          = 0x00020000,
      OLEMISC_IMEMODE                     = 0x00040000,
      OLEMISC_IGNOREACTIVATEWHENVISIBLE   = 0x00080000,
      OLEMISC_WANTSTOMENUMERGE            = 0x00100000,
      OLEMISC_SUPPORTSMULTILEVELUNDO      = 0x00200000
} OLEMISC;

typedef enum tagOLECLOSE
{
	OLECLOSE_SAVEIFDIRTY = 0,
      OLECLOSE_NOSAVE      = 1,
      OLECLOSE_PROMPTSAVE  = 2
} OLECLOSE;

typedef enum CTRLINFOCONSTANTS {
	CTRLINFO_EATS_RETURN = 1,
	CTRLINFO_EATS_ESCAPE = 2
} CTRLINFOCONSTANTS;

typedef enum tagXFORMCOORDS {
	XFORMCOORDS_POSITION            = 0x1,
	XFORMCOORDS_SIZE                = 0x2,
	XFORMCOORDS_HIMETRICTOCONTAINER = 0x4,
	XFORMCOORDS_CONTAINERTOHIMETRIC = 0x8,
	XFORMCOORDS_EVENTCOMPAT         = 0x10
} XFORMCOORDS;

// Bitwise verb attributes used in OLEVERB.grfAttribs
typedef enum tagOLEVERBATTRIB // bitwise
{
	OLEVERBATTRIB_NEVERDIRTIES = 1,
      OLEVERBATTRIB_ONCONTAINERMENU = 2
} OLEVERBATTRIB;

typedef enum tagDVASPECT
{
    	DVASPECT_CONTENT = 1,
    	DVASPECT_THUMBNAIL = 2,
    	DVASPECT_ICON = 4,
    	DVASPECT_DOCPRINT = 8
} DVASPECT;

typedef enum tagDVASPECT2 
{
	DVASPECT_OPAQUE         = 16,
     	DVASPECT_TRANSPARENT    = 32
} DVASPECT2;

// Storage element types 
typedef enum STGTY {
	STGTY_STORAGE   = 1,
      STGTY_STREAM    = 2,
      STGTY_LOCKBYTES = 3,
      STGTY_PROPERTY  = 4
} STGTY;

typedef enum STREAM_SEEK {
	STREAM_SEEK_SET = 0,
      STREAM_SEEK_CUR = 1,
      STREAM_SEEK_END = 2
} STREAM_SEEK;

typedef enum LOCKTYPE {
	LOCK_WRITE      = 1,
      LOCK_EXCLUSIVE  = 2,
      LOCK_ONLYONCE   = 4
} LOCKTYPE;

typedef enum TYPEKIND
{
	TKIND_ENUM = 0,
	TKIND_RECORD,
	TKIND_MODULE,
	TKIND_INTERFACE,
	TKIND_DISPATCH,
	TKIND_COCLASS,
	TKIND_ALIAS,
	TKIND_UNION,
	TKIND_MAX                   
} TYPEKIND;

typedef enum CALLCONV {
	CC_CDECL = 1,
	CC_MSCPASCAL = 2,
	CC_PASCAL = 2,
	CC_MACPASCAL,
	CC_STDCALL,
	CC_RESERVED,
	CC_SYSCALL,
	CC_MPWCDECL,
	CC_MPWPASCAL,
	CC_MAX                    
} CALLCONV;

typedef enum FUNCKIND {
	FUNC_VIRTUAL,
	FUNC_PUREVIRTUAL,
	FUNC_NONVIRTUAL,
	FUNC_STATIC,
	FUNC_DISPATCH
} FUNCKIND;

typedef enum INVOKEKIND {
	INVOKE_FUNC = 1,
	INVOKE_PROPERTYGET = 2,
	INVOKE_PROPERTYPUT = 4,
	INVOKE_PROPERTYPUTREF = 8
} INVOKEKIND;

typedef enum FUNCFLAGS {
    FUNCFLAG_FRESTRICTED = 0x1,
    FUNCFLAG_FSOURCE = 0x2,
    FUNCFLAG_FBINDABLE = 0x4,
    FUNCFLAG_FREQUESTEDIT = 0x8,
    FUNCFLAG_FDISPLAYBIND = 0x10,
    FUNCFLAG_FDEFAULTBIND = 0x20,
    FUNCFLAG_FHIDDEN = 0x40,
    FUNCFLAG_FUSESGETLASTERROR = 0x80,
    FUNCFLAG_FDEFAULTCOLLELEM = 0x100,
    FUNCFLAG_FUIDEFAULT = 0x200,
    FUNCFLAG_FNONBROWSABLE = 0x400,
    FUNCFLAG_FREPLACEABLE = 0x800,
    FUNCFLAG_FIMMEDIATEBIND = 0x1000
} FUNCFLAGS;


typedef enum VARENUM
{
    VT_EMPTY           = 0,
    VT_NULL            = 1,
    VT_I2              = 2,
    VT_I4              = 3,
    VT_R4              = 4,
    VT_R8              = 5,
    VT_CY              = 6,
    VT_DATE            = 7,
    VT_BSTR            = 8,
    VT_DISPATCH        = 9,
    VT_ERROR           = 10,
    VT_BOOL            = 11,
    VT_VARIANT         = 12,
    VT_UNKNOWN         = 13,
    VT_DECIMAL         = 14,
// VBA reserves 15 for future use
    VT_I1              = 16,
    VT_UI1             = 17,
    VT_UI2             = 18,
    VT_UI4             = 19,
    VT_I8              = 20,
    VT_UI8             = 21,
    VT_INT             = 22,
    VT_UINT            = 23,
    VT_VOID            = 24,
    VT_HRESULT         = 25,
    VT_PTR             = 26,
    VT_SAFEARRAY       = 27,
    VT_CARRAY          = 28,
    VT_USERDEFINED     = 29,
    VT_LPSTR           = 30,
    VT_LPWSTR          = 31,
// VBA reserves 32-35 for future use
    VT_RECORD          = 36,

    VT_FILETIME        = 64,
    VT_BLOB            = 65,
    VT_STREAM          = 66,
    VT_STORAGE         = 67,
    VT_STREAMED_OBJECT = 68,
    VT_STORED_OBJECT   = 69,
    VT_BLOB_OBJECT     = 70,
    VT_CF              = 71,
    VT_CLSID           = 72,

    VT_BSTR_BLOB       = 0x0fff,

    VT_VECTOR          = 0x1000,
    VT_ARRAY           = 0x2000,
    VT_BYREF           = 0x4000,
    VT_RESERVED        = 0x8000,

    VT_ILLEGAL         = 0xffff,
    VT_ILLEGALMASKED   = 0x0fff,
    VT_TYPEMASK        = 0x0fff
} VARENUM;

typedef enum tagSYSKIND 
{
	SYS_WIN16 = 0,
      SYS_WIN32,
      SYS_MAC
} SYSKIND;

typedef enum tagLIBFLAGS 
{
	LIBFLAG_FRESTRICTED = 0x01,
      LIBFLAG_FCONTROL = 0x02,
      LIBFLAG_FHIDDEN = 0x04,
      LIBFLAG_FHASDISKIMAGE = 0x08
} LIBFLAGS;

typedef enum tagREGKIND
{
    	REGKIND_DEFAULT,
    	REGKIND_REGISTER,
    	REGKIND_NONE
} REGKIND;

typedef enum tagPARAMFLAGS
{
	PARAMFLAG_NONE = 0x0,
	PARAMFLAG_FIN = 0x1,
	PARAMFLAG_FOUT = 0x2,
	PARAMFLAG_FLCID = 0x4,
	PARAMFLAG_FRETVAL = 0x8,
	PARAMFLAG_FOPT = 0x10,
	PARAMFLAG_FHASDEFAULT = 0x20
} PARAMFLAGS;

typedef enum tagIDLFLAGS
{
    	IDLFLAG_NONE = 0x0,		// PARAMFLAG_NONE,
    	IDLFLAG_FIN = 0x1,		// PARAMFLAG_FIN,
    	IDLFLAG_FOUT = 0x2,		// PARAMFLAG_FOUT, 
	IDLFLAG_FLCID = 0x4,	// PARAMFLAG_FLCID, 
	IDLFLAG_FRETVAL = 0x8,	// PARAMFLAG_FRETVAL

} IDLFLAGS;

typedef enum tagTYPEFLAGS 
{ 
	TYPEFLAG_FAPPOBJECT = 0x01, 
	TYPEFLAG_FCANCREATE = 0x02, 
	TYPEFLAG_FLICENSED = 0x04, 
	TYPEFLAG_FPREDECLID = 0x08, 
	TYPEFLAG_FHIDDEN = 0x10, 
	TYPEFLAG_FCONTROL = 0x20, 
	TYPEFLAG_FDUAL = 0x40, 
	TYPEFLAG_FNONEXTENSIBLE = 0x80, 
	TYPEFLAG_FOLEAUTOMATION = 0x100, 
	TYPEFLAG_FRESTRICTED = 0x200, 
	TYPEFLAG_FAGGREGATABLE = 0x400, 
	TYPEFLAG_FREPLACEABLE = 0x800, 
	TYPEFLAG_FDISPATCHABLE = 0x1000
} TYPEFLAGS;

typedef enum tagVARKIND 
{ 
	VAR_PERINSTANCE, 
	VAR_STATIC, 
	VAR_CONST, 
	VAR_DISPATCH
} VARKIND;

typedef enum tagVARFLAGS 
{ 
	VARFLAG_FREADONLY = 0x1, 
	VARFLAG_FSOURCE = 0x2, 
	VARFLAG_FBINDABLE = 0x4, 
	VARFLAG_FREQUESTEDIT = 0x8, 
	VARFLAG_FDISPLAYBIND = 0x10, 
	VARFLAG_FDEFAULTBIND = 0x20, 
	VARFLAG_FHIDDEN = 0x40, 
	VARFLAG_FRESTRICTED = 0x80, 
	VARFLAG_FDEFAULTCOLLELEM = 0x100, 
	VARFLAG_FUIDEFAULT = 0x200, 
	VARFLAG_FNONBROWSABLE = 0x400, 
	VARFLAG_FREPLACEABLE = 0x800, 
	VARFLAG_FIMMEDIATEBIND = 0x1000
} VARFLAGS;

typedef enum tagIMPLTYPEFLAGS
{
	IMPLTYPEFLAG_FDEFAULT = 0x1,
	IMPLTYPEFLAG_FSOURCE = 0x2,
	IMPLTYPEFLAG_FRESTRICTED = 0x4, 
	IMPLTYPEFLAG_FDEFAULTVTABLE = 0x800
} IMPLTYPEFLAGS;
